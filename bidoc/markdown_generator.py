"""Markdown documentation generator"""

import logging
from typing import Any, Dict

from .markdown_cleaner import clean_markdown
from .template_utils import render_powerbi_template, render_tableau_template


class MarkdownGenerator:
    """Generate Markdown documentation from extracted metadata"""

    def __init__(self):
        self.logger = logging.getLogger(__name__)

    def generate(self, metadata: Dict[str, Any]) -> str:
        """Generate Markdown documentation from metadata"""
        self.logger.debug("Generating Markdown documentation")

        # Determine file type and use appropriate template
        file_type = metadata.get("type", "Unknown")

        if file_type == "Power BI":
            content = self._generate_powerbi_markdown(metadata)
        elif file_type == "Tableau":
            content = self._generate_tableau_markdown(metadata)
        else:
            content = self._generate_generic_markdown(metadata)

        # Clean up markdown formatting issues
        return clean_markdown(content)

    def _generate_powerbi_markdown(self, metadata: Dict[str, Any]) -> str:
        """Generate Markdown for Power BI files using external template"""
        return render_powerbi_template(metadata)

    def _generate_tableau_markdown(self, metadata: Dict[str, Any]) -> str:
        """Generate Markdown for Tableau files using external template"""
        return render_tableau_template(metadata)

    def _generate_generic_markdown(self, metadata: Dict[str, Any]) -> str:
        """Generate generic Markdown for unknown file types"""
        template = Template(
            """# Documentation for {{ file_name }}

Generated on {{ generation_date }}

## Overview

**File Type:** {{ file_type }}
**File Path:** `{{ file_path }}`

## Raw Metadata

```json
{{ metadata_json }}
```

---
Documentation generated by BI Documentation Tool
"""
        )

        import json

        return template.render(
            file_name=metadata.get("file", "Unknown"),
            file_type=metadata.get("type", "Unknown"),
            file_path=metadata.get("file_path", ""),
            generation_date=datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            metadata_json=json.dumps(metadata, indent=2, default=str),
        )

