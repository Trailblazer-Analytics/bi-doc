name: Release and Publish

on:
  push:
    tags:
      - 'v*.*.*'  # Only trigger on semantic version tags

permissions:
  contents: write    # Required for creating releases
  id-token: write   # Required for trusted publishing to PyPI

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for setuptools_scm

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev,test]

    - name: Run tests
      run: |
        pytest --cov=bidoc --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v3

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for setuptools_scm

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Verify package
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: ncipollo/create-release@v1
      with:
        tag: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Release ${{ steps.version.outputs.VERSION }}

          ### Installation
          ```bash
          pip install bidoc==${{ steps.version.outputs.VERSION }}
          ```

          ### Changes
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

          ### Downloads
          - [Python Wheel](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/bidoc-${{ steps.version.outputs.VERSION }}-py3-none-any.whl)
          - [Source Distribution](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/bidoc-${{ steps.version.outputs.VERSION }}.tar.gz)
        artifacts: "dist/*"
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: [test, build, release]
    runs-on: ubuntu-latest
    environment: release  # Requires manual approval for production releases

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        # Uses trusted publishing - no API token needed!
        # Configure at: https://pypi.org/manage/account/publishing/
        repository-url: https://upload.pypi.org/legacy/
